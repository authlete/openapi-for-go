/*
Authlete API

Authlete API Document. 

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authlete

import (
	"encoding/json"
)

// checks if the VciDeferredParseRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VciDeferredParseRequest{}

// VciDeferredParseRequest struct for VciDeferredParseRequest
type VciDeferredParseRequest struct {
	// The access token that came along with the deferred credential request.
	AccessToken *string `json:"accessToken,omitempty"`
	// The message body of the deferred credential request.
	RequestContent *string `json:"requestContent,omitempty"`
}

// NewVciDeferredParseRequest instantiates a new VciDeferredParseRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVciDeferredParseRequest() *VciDeferredParseRequest {
	this := VciDeferredParseRequest{}
	return &this
}

// NewVciDeferredParseRequestWithDefaults instantiates a new VciDeferredParseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVciDeferredParseRequestWithDefaults() *VciDeferredParseRequest {
	this := VciDeferredParseRequest{}
	return &this
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *VciDeferredParseRequest) GetAccessToken() string {
	if o == nil || isNil(o.AccessToken) {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VciDeferredParseRequest) GetAccessTokenOk() (*string, bool) {
	if o == nil || isNil(o.AccessToken) {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *VciDeferredParseRequest) HasAccessToken() bool {
	if o != nil && !isNil(o.AccessToken) {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *VciDeferredParseRequest) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetRequestContent returns the RequestContent field value if set, zero value otherwise.
func (o *VciDeferredParseRequest) GetRequestContent() string {
	if o == nil || isNil(o.RequestContent) {
		var ret string
		return ret
	}
	return *o.RequestContent
}

// GetRequestContentOk returns a tuple with the RequestContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VciDeferredParseRequest) GetRequestContentOk() (*string, bool) {
	if o == nil || isNil(o.RequestContent) {
		return nil, false
	}
	return o.RequestContent, true
}

// HasRequestContent returns a boolean if a field has been set.
func (o *VciDeferredParseRequest) HasRequestContent() bool {
	if o != nil && !isNil(o.RequestContent) {
		return true
	}

	return false
}

// SetRequestContent gets a reference to the given string and assigns it to the RequestContent field.
func (o *VciDeferredParseRequest) SetRequestContent(v string) {
	o.RequestContent = &v
}

func (o VciDeferredParseRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VciDeferredParseRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AccessToken) {
		toSerialize["accessToken"] = o.AccessToken
	}
	if !isNil(o.RequestContent) {
		toSerialize["requestContent"] = o.RequestContent
	}
	return toSerialize, nil
}

type NullableVciDeferredParseRequest struct {
	value *VciDeferredParseRequest
	isSet bool
}

func (v NullableVciDeferredParseRequest) Get() *VciDeferredParseRequest {
	return v.value
}

func (v *NullableVciDeferredParseRequest) Set(val *VciDeferredParseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVciDeferredParseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVciDeferredParseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVciDeferredParseRequest(val *VciDeferredParseRequest) *NullableVciDeferredParseRequest {
	return &NullableVciDeferredParseRequest{value: val, isSet: true}
}

func (v NullableVciDeferredParseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVciDeferredParseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


