/*
Authlete API

Authlete API Document. 

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authlete

import (
	"encoding/json"
)

// checks if the ClientGetListLimitedResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientGetListLimitedResponse{}

// ClientGetListLimitedResponse struct for ClientGetListLimitedResponse
type ClientGetListLimitedResponse struct {
	// Start index (inclusive) of the result set of the query. 
	Start *int32 `json:"start,omitempty"`
	// End index (exclusive) of the result set of the query. 
	End *int32 `json:"end,omitempty"`
	// Total number of clients that belong to the service. This doesn't mean the number of clients contained in the response. 
	TotalCount *int32 `json:"totalCount,omitempty"`
	// An array of clients. 
	Clients []ClientLimited `json:"clients,omitempty"`
}

// NewClientGetListLimitedResponse instantiates a new ClientGetListLimitedResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientGetListLimitedResponse() *ClientGetListLimitedResponse {
	this := ClientGetListLimitedResponse{}
	return &this
}

// NewClientGetListLimitedResponseWithDefaults instantiates a new ClientGetListLimitedResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientGetListLimitedResponseWithDefaults() *ClientGetListLimitedResponse {
	this := ClientGetListLimitedResponse{}
	return &this
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *ClientGetListLimitedResponse) GetStart() int32 {
	if o == nil || isNil(o.Start) {
		var ret int32
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientGetListLimitedResponse) GetStartOk() (*int32, bool) {
	if o == nil || isNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *ClientGetListLimitedResponse) HasStart() bool {
	if o != nil && !isNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given int32 and assigns it to the Start field.
func (o *ClientGetListLimitedResponse) SetStart(v int32) {
	o.Start = &v
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *ClientGetListLimitedResponse) GetEnd() int32 {
	if o == nil || isNil(o.End) {
		var ret int32
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientGetListLimitedResponse) GetEndOk() (*int32, bool) {
	if o == nil || isNil(o.End) {
		return nil, false
	}
	return o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *ClientGetListLimitedResponse) HasEnd() bool {
	if o != nil && !isNil(o.End) {
		return true
	}

	return false
}

// SetEnd gets a reference to the given int32 and assigns it to the End field.
func (o *ClientGetListLimitedResponse) SetEnd(v int32) {
	o.End = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *ClientGetListLimitedResponse) GetTotalCount() int32 {
	if o == nil || isNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientGetListLimitedResponse) GetTotalCountOk() (*int32, bool) {
	if o == nil || isNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *ClientGetListLimitedResponse) HasTotalCount() bool {
	if o != nil && !isNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *ClientGetListLimitedResponse) SetTotalCount(v int32) {
	o.TotalCount = &v
}

// GetClients returns the Clients field value if set, zero value otherwise.
func (o *ClientGetListLimitedResponse) GetClients() []ClientLimited {
	if o == nil || isNil(o.Clients) {
		var ret []ClientLimited
		return ret
	}
	return o.Clients
}

// GetClientsOk returns a tuple with the Clients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientGetListLimitedResponse) GetClientsOk() ([]ClientLimited, bool) {
	if o == nil || isNil(o.Clients) {
		return nil, false
	}
	return o.Clients, true
}

// HasClients returns a boolean if a field has been set.
func (o *ClientGetListLimitedResponse) HasClients() bool {
	if o != nil && !isNil(o.Clients) {
		return true
	}

	return false
}

// SetClients gets a reference to the given []ClientLimited and assigns it to the Clients field.
func (o *ClientGetListLimitedResponse) SetClients(v []ClientLimited) {
	o.Clients = v
}

func (o ClientGetListLimitedResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientGetListLimitedResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !isNil(o.End) {
		toSerialize["end"] = o.End
	}
	if !isNil(o.TotalCount) {
		toSerialize["totalCount"] = o.TotalCount
	}
	if !isNil(o.Clients) {
		toSerialize["clients"] = o.Clients
	}
	return toSerialize, nil
}

type NullableClientGetListLimitedResponse struct {
	value *ClientGetListLimitedResponse
	isSet bool
}

func (v NullableClientGetListLimitedResponse) Get() *ClientGetListLimitedResponse {
	return v.value
}

func (v *NullableClientGetListLimitedResponse) Set(val *ClientGetListLimitedResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableClientGetListLimitedResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableClientGetListLimitedResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientGetListLimitedResponse(val *ClientGetListLimitedResponse) *NullableClientGetListLimitedResponse {
	return &NullableClientGetListLimitedResponse{value: val, isSet: true}
}

func (v NullableClientGetListLimitedResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientGetListLimitedResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


