/*
Authlete API

Authlete API Document. 

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authlete

import (
	"encoding/json"
)

// checks if the ServiceLimited type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceLimited{}

// ServiceLimited struct for ServiceLimited
type ServiceLimited struct {
	// The sequential number of the service. The value of this property is assigned by Authlete.
	Number *int32 `json:"number,omitempty"`
	// The name of this service.
	ServiceName *string `json:"serviceName,omitempty"`
	// The description about the service.
	Description *string `json:"description,omitempty"`
	// The service ID used in Authlete API calls. The value of this property is assigned by Authlete.
	ApiKey *int64 `json:"apiKey,omitempty"`
	// Deprecated. Always `true`.
	ClientIdAliasEnabled *bool `json:"clientIdAliasEnabled,omitempty"`
}

// NewServiceLimited instantiates a new ServiceLimited object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceLimited() *ServiceLimited {
	this := ServiceLimited{}
	return &this
}

// NewServiceLimitedWithDefaults instantiates a new ServiceLimited object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceLimitedWithDefaults() *ServiceLimited {
	this := ServiceLimited{}
	return &this
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *ServiceLimited) GetNumber() int32 {
	if o == nil || isNil(o.Number) {
		var ret int32
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceLimited) GetNumberOk() (*int32, bool) {
	if o == nil || isNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *ServiceLimited) HasNumber() bool {
	if o != nil && !isNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given int32 and assigns it to the Number field.
func (o *ServiceLimited) SetNumber(v int32) {
	o.Number = &v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *ServiceLimited) GetServiceName() string {
	if o == nil || isNil(o.ServiceName) {
		var ret string
		return ret
	}
	return *o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceLimited) GetServiceNameOk() (*string, bool) {
	if o == nil || isNil(o.ServiceName) {
		return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *ServiceLimited) HasServiceName() bool {
	if o != nil && !isNil(o.ServiceName) {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given string and assigns it to the ServiceName field.
func (o *ServiceLimited) SetServiceName(v string) {
	o.ServiceName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ServiceLimited) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceLimited) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ServiceLimited) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ServiceLimited) SetDescription(v string) {
	o.Description = &v
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *ServiceLimited) GetApiKey() int64 {
	if o == nil || isNil(o.ApiKey) {
		var ret int64
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceLimited) GetApiKeyOk() (*int64, bool) {
	if o == nil || isNil(o.ApiKey) {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *ServiceLimited) HasApiKey() bool {
	if o != nil && !isNil(o.ApiKey) {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given int64 and assigns it to the ApiKey field.
func (o *ServiceLimited) SetApiKey(v int64) {
	o.ApiKey = &v
}

// GetClientIdAliasEnabled returns the ClientIdAliasEnabled field value if set, zero value otherwise.
func (o *ServiceLimited) GetClientIdAliasEnabled() bool {
	if o == nil || isNil(o.ClientIdAliasEnabled) {
		var ret bool
		return ret
	}
	return *o.ClientIdAliasEnabled
}

// GetClientIdAliasEnabledOk returns a tuple with the ClientIdAliasEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceLimited) GetClientIdAliasEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.ClientIdAliasEnabled) {
		return nil, false
	}
	return o.ClientIdAliasEnabled, true
}

// HasClientIdAliasEnabled returns a boolean if a field has been set.
func (o *ServiceLimited) HasClientIdAliasEnabled() bool {
	if o != nil && !isNil(o.ClientIdAliasEnabled) {
		return true
	}

	return false
}

// SetClientIdAliasEnabled gets a reference to the given bool and assigns it to the ClientIdAliasEnabled field.
func (o *ServiceLimited) SetClientIdAliasEnabled(v bool) {
	o.ClientIdAliasEnabled = &v
}

func (o ServiceLimited) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceLimited) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	if !isNil(o.ServiceName) {
		toSerialize["serviceName"] = o.ServiceName
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.ApiKey) {
		toSerialize["apiKey"] = o.ApiKey
	}
	if !isNil(o.ClientIdAliasEnabled) {
		toSerialize["clientIdAliasEnabled"] = o.ClientIdAliasEnabled
	}
	return toSerialize, nil
}

type NullableServiceLimited struct {
	value *ServiceLimited
	isSet bool
}

func (v NullableServiceLimited) Get() *ServiceLimited {
	return v.value
}

func (v *NullableServiceLimited) Set(val *ServiceLimited) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceLimited) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceLimited) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceLimited(val *ServiceLimited) *NullableServiceLimited {
	return &NullableServiceLimited{value: val, isSet: true}
}

func (v NullableServiceLimited) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceLimited) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


