/*
Authlete API

Authlete API Document. 

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authlete

import (
	"encoding/json"
)

// checks if the CredentialIssuanceOrder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CredentialIssuanceOrder{}

// CredentialIssuanceOrder struct for CredentialIssuanceOrder
type CredentialIssuanceOrder struct {
	// The identifier of a credential request.
	RequestIdentifier *string `json:"requestIdentifier,omitempty"`
	// The additional payload that will be added into a credential to be issued.
	CredentialPayload *string `json:"credentialPayload,omitempty"`
	// The flag indicating whether to defer credential issuance.
	IssuanceDeferred *bool `json:"issuanceDeferred,omitempty"`
	// The duration of a credential to be issued.
	CredentialDuration *int64 `json:"credentialDuration,omitempty"`
	// The key ID of a private key that should be used for signing a credential to be issued.
	SigningKeyId *string `json:"signingKeyId,omitempty"`
}

// NewCredentialIssuanceOrder instantiates a new CredentialIssuanceOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialIssuanceOrder() *CredentialIssuanceOrder {
	this := CredentialIssuanceOrder{}
	return &this
}

// NewCredentialIssuanceOrderWithDefaults instantiates a new CredentialIssuanceOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialIssuanceOrderWithDefaults() *CredentialIssuanceOrder {
	this := CredentialIssuanceOrder{}
	return &this
}

// GetRequestIdentifier returns the RequestIdentifier field value if set, zero value otherwise.
func (o *CredentialIssuanceOrder) GetRequestIdentifier() string {
	if o == nil || isNil(o.RequestIdentifier) {
		var ret string
		return ret
	}
	return *o.RequestIdentifier
}

// GetRequestIdentifierOk returns a tuple with the RequestIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialIssuanceOrder) GetRequestIdentifierOk() (*string, bool) {
	if o == nil || isNil(o.RequestIdentifier) {
		return nil, false
	}
	return o.RequestIdentifier, true
}

// HasRequestIdentifier returns a boolean if a field has been set.
func (o *CredentialIssuanceOrder) HasRequestIdentifier() bool {
	if o != nil && !isNil(o.RequestIdentifier) {
		return true
	}

	return false
}

// SetRequestIdentifier gets a reference to the given string and assigns it to the RequestIdentifier field.
func (o *CredentialIssuanceOrder) SetRequestIdentifier(v string) {
	o.RequestIdentifier = &v
}

// GetCredentialPayload returns the CredentialPayload field value if set, zero value otherwise.
func (o *CredentialIssuanceOrder) GetCredentialPayload() string {
	if o == nil || isNil(o.CredentialPayload) {
		var ret string
		return ret
	}
	return *o.CredentialPayload
}

// GetCredentialPayloadOk returns a tuple with the CredentialPayload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialIssuanceOrder) GetCredentialPayloadOk() (*string, bool) {
	if o == nil || isNil(o.CredentialPayload) {
		return nil, false
	}
	return o.CredentialPayload, true
}

// HasCredentialPayload returns a boolean if a field has been set.
func (o *CredentialIssuanceOrder) HasCredentialPayload() bool {
	if o != nil && !isNil(o.CredentialPayload) {
		return true
	}

	return false
}

// SetCredentialPayload gets a reference to the given string and assigns it to the CredentialPayload field.
func (o *CredentialIssuanceOrder) SetCredentialPayload(v string) {
	o.CredentialPayload = &v
}

// GetIssuanceDeferred returns the IssuanceDeferred field value if set, zero value otherwise.
func (o *CredentialIssuanceOrder) GetIssuanceDeferred() bool {
	if o == nil || isNil(o.IssuanceDeferred) {
		var ret bool
		return ret
	}
	return *o.IssuanceDeferred
}

// GetIssuanceDeferredOk returns a tuple with the IssuanceDeferred field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialIssuanceOrder) GetIssuanceDeferredOk() (*bool, bool) {
	if o == nil || isNil(o.IssuanceDeferred) {
		return nil, false
	}
	return o.IssuanceDeferred, true
}

// HasIssuanceDeferred returns a boolean if a field has been set.
func (o *CredentialIssuanceOrder) HasIssuanceDeferred() bool {
	if o != nil && !isNil(o.IssuanceDeferred) {
		return true
	}

	return false
}

// SetIssuanceDeferred gets a reference to the given bool and assigns it to the IssuanceDeferred field.
func (o *CredentialIssuanceOrder) SetIssuanceDeferred(v bool) {
	o.IssuanceDeferred = &v
}

// GetCredentialDuration returns the CredentialDuration field value if set, zero value otherwise.
func (o *CredentialIssuanceOrder) GetCredentialDuration() int64 {
	if o == nil || isNil(o.CredentialDuration) {
		var ret int64
		return ret
	}
	return *o.CredentialDuration
}

// GetCredentialDurationOk returns a tuple with the CredentialDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialIssuanceOrder) GetCredentialDurationOk() (*int64, bool) {
	if o == nil || isNil(o.CredentialDuration) {
		return nil, false
	}
	return o.CredentialDuration, true
}

// HasCredentialDuration returns a boolean if a field has been set.
func (o *CredentialIssuanceOrder) HasCredentialDuration() bool {
	if o != nil && !isNil(o.CredentialDuration) {
		return true
	}

	return false
}

// SetCredentialDuration gets a reference to the given int64 and assigns it to the CredentialDuration field.
func (o *CredentialIssuanceOrder) SetCredentialDuration(v int64) {
	o.CredentialDuration = &v
}

// GetSigningKeyId returns the SigningKeyId field value if set, zero value otherwise.
func (o *CredentialIssuanceOrder) GetSigningKeyId() string {
	if o == nil || isNil(o.SigningKeyId) {
		var ret string
		return ret
	}
	return *o.SigningKeyId
}

// GetSigningKeyIdOk returns a tuple with the SigningKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialIssuanceOrder) GetSigningKeyIdOk() (*string, bool) {
	if o == nil || isNil(o.SigningKeyId) {
		return nil, false
	}
	return o.SigningKeyId, true
}

// HasSigningKeyId returns a boolean if a field has been set.
func (o *CredentialIssuanceOrder) HasSigningKeyId() bool {
	if o != nil && !isNil(o.SigningKeyId) {
		return true
	}

	return false
}

// SetSigningKeyId gets a reference to the given string and assigns it to the SigningKeyId field.
func (o *CredentialIssuanceOrder) SetSigningKeyId(v string) {
	o.SigningKeyId = &v
}

func (o CredentialIssuanceOrder) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CredentialIssuanceOrder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.RequestIdentifier) {
		toSerialize["requestIdentifier"] = o.RequestIdentifier
	}
	if !isNil(o.CredentialPayload) {
		toSerialize["credentialPayload"] = o.CredentialPayload
	}
	if !isNil(o.IssuanceDeferred) {
		toSerialize["issuanceDeferred"] = o.IssuanceDeferred
	}
	if !isNil(o.CredentialDuration) {
		toSerialize["credentialDuration"] = o.CredentialDuration
	}
	if !isNil(o.SigningKeyId) {
		toSerialize["signingKeyId"] = o.SigningKeyId
	}
	return toSerialize, nil
}

type NullableCredentialIssuanceOrder struct {
	value *CredentialIssuanceOrder
	isSet bool
}

func (v NullableCredentialIssuanceOrder) Get() *CredentialIssuanceOrder {
	return v.value
}

func (v *NullableCredentialIssuanceOrder) Set(val *CredentialIssuanceOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialIssuanceOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialIssuanceOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialIssuanceOrder(val *CredentialIssuanceOrder) *NullableCredentialIssuanceOrder {
	return &NullableCredentialIssuanceOrder{value: val, isSet: true}
}

func (v NullableCredentialIssuanceOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialIssuanceOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


