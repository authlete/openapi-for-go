/*
Authlete API

Authlete API Document. 

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authlete

import (
	"encoding/json"
)

// checks if the VciSingleIssueRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VciSingleIssueRequest{}

// VciSingleIssueRequest struct for VciSingleIssueRequest
type VciSingleIssueRequest struct {
	// The access token that came along with the credential request.
	AccessToken *string `json:"accessToken,omitempty"`
	Order *CredentialIssuanceOrder `json:"order,omitempty"`
}

// NewVciSingleIssueRequest instantiates a new VciSingleIssueRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVciSingleIssueRequest() *VciSingleIssueRequest {
	this := VciSingleIssueRequest{}
	return &this
}

// NewVciSingleIssueRequestWithDefaults instantiates a new VciSingleIssueRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVciSingleIssueRequestWithDefaults() *VciSingleIssueRequest {
	this := VciSingleIssueRequest{}
	return &this
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *VciSingleIssueRequest) GetAccessToken() string {
	if o == nil || isNil(o.AccessToken) {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VciSingleIssueRequest) GetAccessTokenOk() (*string, bool) {
	if o == nil || isNil(o.AccessToken) {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *VciSingleIssueRequest) HasAccessToken() bool {
	if o != nil && !isNil(o.AccessToken) {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *VciSingleIssueRequest) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *VciSingleIssueRequest) GetOrder() CredentialIssuanceOrder {
	if o == nil || isNil(o.Order) {
		var ret CredentialIssuanceOrder
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VciSingleIssueRequest) GetOrderOk() (*CredentialIssuanceOrder, bool) {
	if o == nil || isNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *VciSingleIssueRequest) HasOrder() bool {
	if o != nil && !isNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given CredentialIssuanceOrder and assigns it to the Order field.
func (o *VciSingleIssueRequest) SetOrder(v CredentialIssuanceOrder) {
	o.Order = &v
}

func (o VciSingleIssueRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VciSingleIssueRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AccessToken) {
		toSerialize["accessToken"] = o.AccessToken
	}
	if !isNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	return toSerialize, nil
}

type NullableVciSingleIssueRequest struct {
	value *VciSingleIssueRequest
	isSet bool
}

func (v NullableVciSingleIssueRequest) Get() *VciSingleIssueRequest {
	return v.value
}

func (v *NullableVciSingleIssueRequest) Set(val *VciSingleIssueRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVciSingleIssueRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVciSingleIssueRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVciSingleIssueRequest(val *VciSingleIssueRequest) *NullableVciSingleIssueRequest {
	return &NullableVciSingleIssueRequest{value: val, isSet: true}
}

func (v NullableVciSingleIssueRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVciSingleIssueRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


