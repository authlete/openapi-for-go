/*
Authlete API

Authlete API Document. 

API version: 2.3.12
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authlete

import (
	"encoding/json"
)

// checks if the HskCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HskCreateRequest{}

// HskCreateRequest struct for HskCreateRequest
type HskCreateRequest struct {
	// The key type (EC or RSA) 
	Kty *string `json:"kty,omitempty"`
	// The key on the HSM.  When the key use is \"sig\" (signature), the private key on the HSM is used to sign data and the corresponding public key is used to verify the signature. When the key use is \"enc\" (encryption), the private key on the HSM is used to decrypt encrypted data which have been encrypted with the corresponding public key 
	Use *string `json:"use,omitempty"`
	// Key ID for the key on the HSM. 
	Kid *string `json:"kid,omitempty"`
	// The name of the HSM. The identifier for the HSM that sits behind the Authlete server. For example, \"google\". 
	HsmName *string `json:"hsmName,omitempty"`
	// The handle for the key on the HSM. A handle is a base64url-encoded 256-bit random value (43 letters) which is assigned by Authlete on the call of the /api/hsk/create API 
	Handle *string `json:"handle,omitempty"`
	// The public key that corresponds to the key on the HSM.
	PublicKey *string `json:"publicKey,omitempty"`
}

// NewHskCreateRequest instantiates a new HskCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHskCreateRequest() *HskCreateRequest {
	this := HskCreateRequest{}
	return &this
}

// NewHskCreateRequestWithDefaults instantiates a new HskCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHskCreateRequestWithDefaults() *HskCreateRequest {
	this := HskCreateRequest{}
	return &this
}

// GetKty returns the Kty field value if set, zero value otherwise.
func (o *HskCreateRequest) GetKty() string {
	if o == nil || isNil(o.Kty) {
		var ret string
		return ret
	}
	return *o.Kty
}

// GetKtyOk returns a tuple with the Kty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HskCreateRequest) GetKtyOk() (*string, bool) {
	if o == nil || isNil(o.Kty) {
		return nil, false
	}
	return o.Kty, true
}

// HasKty returns a boolean if a field has been set.
func (o *HskCreateRequest) HasKty() bool {
	if o != nil && !isNil(o.Kty) {
		return true
	}

	return false
}

// SetKty gets a reference to the given string and assigns it to the Kty field.
func (o *HskCreateRequest) SetKty(v string) {
	o.Kty = &v
}

// GetUse returns the Use field value if set, zero value otherwise.
func (o *HskCreateRequest) GetUse() string {
	if o == nil || isNil(o.Use) {
		var ret string
		return ret
	}
	return *o.Use
}

// GetUseOk returns a tuple with the Use field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HskCreateRequest) GetUseOk() (*string, bool) {
	if o == nil || isNil(o.Use) {
		return nil, false
	}
	return o.Use, true
}

// HasUse returns a boolean if a field has been set.
func (o *HskCreateRequest) HasUse() bool {
	if o != nil && !isNil(o.Use) {
		return true
	}

	return false
}

// SetUse gets a reference to the given string and assigns it to the Use field.
func (o *HskCreateRequest) SetUse(v string) {
	o.Use = &v
}

// GetKid returns the Kid field value if set, zero value otherwise.
func (o *HskCreateRequest) GetKid() string {
	if o == nil || isNil(o.Kid) {
		var ret string
		return ret
	}
	return *o.Kid
}

// GetKidOk returns a tuple with the Kid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HskCreateRequest) GetKidOk() (*string, bool) {
	if o == nil || isNil(o.Kid) {
		return nil, false
	}
	return o.Kid, true
}

// HasKid returns a boolean if a field has been set.
func (o *HskCreateRequest) HasKid() bool {
	if o != nil && !isNil(o.Kid) {
		return true
	}

	return false
}

// SetKid gets a reference to the given string and assigns it to the Kid field.
func (o *HskCreateRequest) SetKid(v string) {
	o.Kid = &v
}

// GetHsmName returns the HsmName field value if set, zero value otherwise.
func (o *HskCreateRequest) GetHsmName() string {
	if o == nil || isNil(o.HsmName) {
		var ret string
		return ret
	}
	return *o.HsmName
}

// GetHsmNameOk returns a tuple with the HsmName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HskCreateRequest) GetHsmNameOk() (*string, bool) {
	if o == nil || isNil(o.HsmName) {
		return nil, false
	}
	return o.HsmName, true
}

// HasHsmName returns a boolean if a field has been set.
func (o *HskCreateRequest) HasHsmName() bool {
	if o != nil && !isNil(o.HsmName) {
		return true
	}

	return false
}

// SetHsmName gets a reference to the given string and assigns it to the HsmName field.
func (o *HskCreateRequest) SetHsmName(v string) {
	o.HsmName = &v
}

// GetHandle returns the Handle field value if set, zero value otherwise.
func (o *HskCreateRequest) GetHandle() string {
	if o == nil || isNil(o.Handle) {
		var ret string
		return ret
	}
	return *o.Handle
}

// GetHandleOk returns a tuple with the Handle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HskCreateRequest) GetHandleOk() (*string, bool) {
	if o == nil || isNil(o.Handle) {
		return nil, false
	}
	return o.Handle, true
}

// HasHandle returns a boolean if a field has been set.
func (o *HskCreateRequest) HasHandle() bool {
	if o != nil && !isNil(o.Handle) {
		return true
	}

	return false
}

// SetHandle gets a reference to the given string and assigns it to the Handle field.
func (o *HskCreateRequest) SetHandle(v string) {
	o.Handle = &v
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *HskCreateRequest) GetPublicKey() string {
	if o == nil || isNil(o.PublicKey) {
		var ret string
		return ret
	}
	return *o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HskCreateRequest) GetPublicKeyOk() (*string, bool) {
	if o == nil || isNil(o.PublicKey) {
		return nil, false
	}
	return o.PublicKey, true
}

// HasPublicKey returns a boolean if a field has been set.
func (o *HskCreateRequest) HasPublicKey() bool {
	if o != nil && !isNil(o.PublicKey) {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given string and assigns it to the PublicKey field.
func (o *HskCreateRequest) SetPublicKey(v string) {
	o.PublicKey = &v
}

func (o HskCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HskCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Kty) {
		toSerialize["kty"] = o.Kty
	}
	if !isNil(o.Use) {
		toSerialize["use"] = o.Use
	}
	if !isNil(o.Kid) {
		toSerialize["kid"] = o.Kid
	}
	if !isNil(o.HsmName) {
		toSerialize["hsmName"] = o.HsmName
	}
	if !isNil(o.Handle) {
		toSerialize["handle"] = o.Handle
	}
	if !isNil(o.PublicKey) {
		toSerialize["publicKey"] = o.PublicKey
	}
	return toSerialize, nil
}

type NullableHskCreateRequest struct {
	value *HskCreateRequest
	isSet bool
}

func (v NullableHskCreateRequest) Get() *HskCreateRequest {
	return v.value
}

func (v *NullableHskCreateRequest) Set(val *HskCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHskCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHskCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHskCreateRequest(val *HskCreateRequest) *NullableHskCreateRequest {
	return &NullableHskCreateRequest{value: val, isSet: true}
}

func (v NullableHskCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHskCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


